import{_ as n,c as s,j as t,a as o,G as a,w as i,a0 as l,B as b,o as g}from"./chunks/framework.BOM1ST4q.js";const m=JSON.parse('{"title":"web前端","description":"","frontmatter":{},"headers":[],"relativePath":"web/index.md","filePath":"web/index.md"}'),p={name:"web/index.md"};function d(u,e,c,W,h,w){const r=b("LinkBtn");return g(),s("div",null,[e[1]||(e[1]=t("h1",{id:"web前端",tabindex:"-1"},[o("web前端 "),t("a",{class:"header-anchor",href:"#web前端","aria-label":'Permalink to "web前端"'},"​")],-1)),e[2]||(e[2]=t("div",{style:{height:"10px"}},null,-1)),a(r,{url:"https://www.yuque.com/cessstudy/kak11d"},{default:i(()=>e[0]||(e[0]=[o("哔哩哔哩评论区笔记")])),_:1}),e[3]||(e[3]=l('<h2 id="web-1-0" tabindex="-1">Web 1.0 <a class="header-anchor" href="#web-1-0" aria-label="Permalink to &quot;Web 1.0&quot;">​</a></h2><blockquote><p>1990年代中期 — 2000年代初</p></blockquote><p><strong>Web1.0</strong> 通常被称为“静态网页时代”，它是互联网早期的形式，主要特点是：</p><ul><li><strong>静态内容</strong>：大多数网页都是静态的，由HTML文件组成，内容很少更新，用户只能浏览信息，而不能与网页进行互动。</li><li><strong>单向信息流</strong>：用户只能从网站上获取信息，而无法向网站提交数据或者参与内容生成。</li><li><strong>有限的互动性</strong>：Web1.0上的互动性几乎不存在，除了简单的表单提交和链接点击外，用户与网站的互动非常有限。</li><li><strong>技术特点</strong>：HTML、CSS和基础的JavaScript用于页面展示，但没有复杂的交互逻辑。</li></ul><p><strong>典型例子</strong>：最早期的门户网站、公司主页、新闻网站等，像是雅虎、早期的MSN等。</p><h2 id="web-2-0" tabindex="-1">Web 2.0 <a class="header-anchor" href="#web-2-0" aria-label="Permalink to &quot;Web 2.0&quot;">​</a></h2><blockquote><p>2000年代中期 — 现在</p></blockquote><p><strong>Web2.0</strong> 是对Web1.0的一个重大发展，是一个强调<strong>互动性</strong>和<strong>用户生成内容</strong>的时代，具有以下特点：</p><ul><li><strong>用户参与</strong>：Web2.0引入了用户生成内容（UGC），用户不仅是内容的消费者，还可以成为内容的创造者，举例如博客、社交媒体、维基百科等。</li><li><strong>动态内容</strong>：使用AJAX（Asynchronous JavaScript and XML）等技术，网页可以在不重新加载页面的情况下异步获取并显示内容，带来了更加流畅的用户体验。</li><li><strong>社交化</strong>：社交网络（如Facebook、Twitter）、分享平台（如YouTube、Instagram）等成为主流，用户能够通过这些平台建立连接和交流。</li><li><strong>个性化与定制化</strong>：基于用户行为、兴趣等数据，网站可以为用户提供个性化的推荐和内容展示。</li><li><strong>Web应用</strong>：传统的桌面应用程序逐渐被Web应用（如Gmail、Google Docs）取代，用户可以通过浏览器完成更多任务。</li></ul><p><strong>典型例子</strong>：Facebook、YouTube、Twitter、Wikipedia、LinkedIn、Instagram等。</p><h2 id="web-3-0" tabindex="-1">Web 3.0 <a class="header-anchor" href="#web-3-0" aria-label="Permalink to &quot;Web 3.0&quot;">​</a></h2><blockquote><p>正在发展中</p></blockquote><p><strong>Web3.0</strong> 被认为是“语义网”和“去中心化”的互联网的未来，是Web的下一个阶段。尽管Web3.0的定义尚未完全确定，但它通常包括以下几个关键特点：</p><ul><li><strong>语义网</strong>：Web3.0致力于让机器能够“理解”网页内容的含义，通过改进的数据结构和元数据，使信息更容易被机器和系统理解和处理。例如，使用RDF（资源描述框架）、SPARQL等技术，改善数据互操作性。</li><li><strong>人工智能和机器学习</strong>：Web3.0强调AI和机器学习的应用，能够根据用户的需求提供智能化的服务、推荐和搜索结果。</li><li><strong>去中心化</strong>：Web3.0引入区块链等去中心化技术，用户对自己的数据有更大的控制权，信息不再集中于少数几家公司手中。例如，通过区块链技术实现去中心化的应用（DApps）和去中心化的身份验证（Self-sovereign identity）。</li><li><strong>虚拟现实和增强现实</strong>：随着VR/AR技术的发展，Web3.0还可能会让互联网体验变得更加沉浸和交互式。例如，虚拟世界和增强现实应用可能成为Web体验的重要组成部分。</li><li><strong>智能合约与去中心化金融</strong>：区块链技术不仅限于比特币等加密货币，还可以支持智能合约和去中心化金融（DeFi）等创新应用。</li></ul><p><strong>典型例子</strong>：区块链、去中心化应用（DApps）、加密货币、Web3.0搜索引擎（如Presearch）等。</p>',15))])}const f=n(p,[["render",d]]);export{m as __pageData,f as default};
